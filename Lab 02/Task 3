# include <iostream>
# include <string>
using namespace std;

struct Employee
{
    int employeeID;
    string name;
    string department;
    float salary;
};

void inputDetails(Employee* employee_details, int employees);
void printDetails(Employee* employee_details, int employees);
void searchByID(Employee* employee_details, int employees);

int main()
{
    int employees;
    cout << "Enter the number of employees you want to enter details of: ";
    cin >> employees;
    Employee* employee_details = new Employee[employees];
    cout << "\n";

    int end = 0;
    while (end == 0)
    {
        cout << "MENU" << endl;
        cout << "1: Input Employee Details" << endl;
        cout << "2: Print Employee Details" << endl;
        cout << "3: Search by employee ID" << endl;
        cout << "4: Exit" << endl;

        int option;
        cout << "Enter any option from the menu." << endl;
        cin >> option;
        switch (option)
        {
        case 1:
            inputDetails(employee_details, employees);
            break;
        
        case 2:
            printDetails(employee_details, employees);
            break;

        case 3:
            searchByID(employee_details, employees);
            break;

        case 4:
            cout << "Program Exited";
            end = 1;
            break;

        default:
            cout << "Invalid Input";
        }
    }

    delete[] employee_details;
    
}

void inputDetails(Employee* employee_details, int employees)
{
    for (int i = 0; i < employees; i++)
    {
        cout << "EMPLOYEE " << i+1 << endl;
        cout << "Enter the employee ID: ";
        cin >> employee_details[i].employeeID;

        cin.ignore();
        cout << "Enter employee's name: ";
        getline(cin, employee_details[i].name);

        cout << "Enter employee's department: ";
        getline(cin, employee_details[i].department);

        cout << "Enter employee's salary: ";
        cin >> employee_details[i].salary;

        cout << "\n";
    }
}

void printDetails(Employee* employee_details, int employees)
{
    for (int i = 0; i < employees; i++)
    {
        cout << "EMPLOYEE " << i+1 << endl;
        cout << "Employee ID: " << employee_details[i].employeeID << endl;
        cout << "Employee's Name: " << employee_details[i].name << endl;
        cout << "Employee's Department: " << employee_details[i].department << endl;
        cout << "Employee's Salary: " << employee_details[i].salary << endl;
        cout << "\n";
    }
}

void searchByID(Employee* employee_details, int employees)
{
    int searchID;
    cout << "Enter the ID of the employee to be searched: ";
    cin >> searchID;
    int found = 0, i = 0;
    while ((found == 0) && (i < employees))
    {
        if (searchID == employee_details[i].employeeID)
        {
            found = 1;
            cout << "Employee's Name: " << employee_details[i].name << endl;
            cout << "Employee's Department: " << employee_details[i].department << endl;
            cout << "Employee's Salary: " << employee_details[i].salary << endl;
            cout << "\n";
        }
        i++;
    }
    if (found == 0)
    {
        cout << "The ID was not found." << endl;
    }
}
